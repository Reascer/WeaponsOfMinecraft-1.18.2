package reascer.wom.skill;

import net.minecraft.resources.ResourceLocation;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.RegistryObject;
import reascer.wom.skill.dodges.BullChargeSkill;
import reascer.wom.skill.dodges.DodgeMasterSkill;
import reascer.wom.skill.dodges.EnderObscurisSkill;
import reascer.wom.skill.guard.CounterAttack;
import reascer.wom.skill.guard.PerfectBulwarkSkill;
import reascer.wom.skill.guard.VengefulParry;
import reascer.wom.skill.passive.DancingBladeSkill;
import reascer.wom.skill.passive.HeartShieldSkill;
import reascer.wom.skill.passive.MeditationSkill;
import reascer.wom.skill.passive.PainAnticipationSkill;
import reascer.wom.skill.weaponinnate.AgonyPlungeSkill;
import reascer.wom.skill.weaponinnate.DemonicAscensionSkill;
import reascer.wom.skill.weaponinnate.EnderBlastSkill;
import reascer.wom.skill.weaponinnate.EnderFusionSkill;
import reascer.wom.skill.weaponinnate.LunarEclipseSkill;
import reascer.wom.skill.weaponinnate.RegierungSkill;
import reascer.wom.skill.weaponinnate.SakuraStateSkill;
import reascer.wom.skill.weaponinnate.SoulSnatchSkill;
import reascer.wom.skill.weaponinnate.TrueBerserkSkill;
import reascer.wom.skill.weaponpassive.DemonMarkPassiveSkill;
import reascer.wom.skill.weaponpassive.LunarEchoPassiveSkill;
import reascer.wom.skill.weaponpassive.SatsujinPassive;
import reascer.wom.skill.weaponpassive.TormentPassiveSkill;
import yesman.epicfight.api.utils.math.Vec3f;
import yesman.epicfight.main.EpicFightMod;
import yesman.epicfight.skill.SkillDataKey;

public class WOMSkillDataKeys {
	public static final DeferredRegister<SkillDataKey<?>> DATA_KEYS = DeferredRegister.create(new ResourceLocation(EpicFightMod.MODID, "skill_data_keys"), EpicFightMod.MODID);
	
	public static final RegistryObject<SkillDataKey<Boolean>> SUPER_ARMOR = DATA_KEYS.register("super_armor", () -> SkillDataKey.createBooleanKey(false, false, BullChargeSkill.class, RegierungSkill.class, TrueBerserkSkill.class, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> TIMER = DATA_KEYS.register("timer", () -> SkillDataKey.createIntKey(0, false, DodgeMasterSkill.class, VengefulParry.class, PainAnticipationSkill.class, MeditationSkill.class, DemonicAscensionSkill.class, LunarEclipseSkill.class, SakuraStateSkill.class, SoulSnatchSkill.class, TrueBerserkSkill.class, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> DODGE = DATA_KEYS.register("dodge", () -> SkillDataKey.createBooleanKey(false, false, DodgeMasterSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> TARGET_ID = DATA_KEYS.register("target_id", () -> SkillDataKey.createIntKey(0, false, EnderObscurisSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> LAST_ACTIVE = DATA_KEYS.register("last_active", () -> SkillDataKey.createIntKey(0, false, CounterAttack.class));
	public static final RegistryObject<SkillDataKey<Float>> CONSUMPTION_VALUE = DATA_KEYS.register("consumprion_value", () -> SkillDataKey.createFloatKey(0.0F, false, CounterAttack.class, VengefulParry.class));
	public static final RegistryObject<SkillDataKey<Boolean>> PARRYING = DATA_KEYS.register("parrying", () -> SkillDataKey.createBooleanKey(false, false, CounterAttack.class, PerfectBulwarkSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> CHARGE = DATA_KEYS.register("charge", () -> SkillDataKey.createIntKey(0, false, PerfectBulwarkSkill.class, VengefulParry.class));
	public static final RegistryObject<SkillDataKey<Integer>> COOLDOWN = DATA_KEYS.register("cooldown", () -> SkillDataKey.createIntKey(0, false, PerfectBulwarkSkill.class, VengefulParry.class, HeartShieldSkill.class, EnderBlastSkill.class, EnderFusionSkill.class, RegierungSkill.class, SakuraStateSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> VENGENCE_DURATION = DATA_KEYS.register("vengence_duration", () -> SkillDataKey.createIntKey(0, false, VengefulParry.class));
	public static final RegistryObject<SkillDataKey<Boolean>> HOLDING_STANCE = DATA_KEYS.register("holding_stance", () -> SkillDataKey.createBooleanKey(false, false, VengefulParry.class));
	public static final RegistryObject<SkillDataKey<Integer>> STEP = DATA_KEYS.register("step", () -> SkillDataKey.createIntKey(0, false, DancingBladeSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> MELODY_INDEX = DATA_KEYS.register("melody_index", () -> SkillDataKey.createIntKey(0, false, DancingBladeSkill.class));
	public static final RegistryObject<SkillDataKey<Float>> SAVED_ELAPSED_TIME = DATA_KEYS.register("saved_elapsed_time", () -> SkillDataKey.createFloatKey(0.0F, false, DancingBladeSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> MAX_SHIELD = DATA_KEYS.register("max_shield", () -> SkillDataKey.createIntKey(0, false, HeartShieldSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> RECOVERY_RATE = DATA_KEYS.register("recovery_rate", () -> SkillDataKey.createIntKey(0, false, HeartShieldSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> ACTIVE = DATA_KEYS.register("active", () -> SkillDataKey.createBooleanKey(false, false, PainAnticipationSkill.class, MeditationSkill.class, DemonicAscensionSkill.class, SakuraStateSkill.class, TrueBerserkSkill.class, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> DUREE = DATA_KEYS.register("duree", () -> SkillDataKey.createIntKey(0, false, PainAnticipationSkill.class, MeditationSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> CYCLE = DATA_KEYS.register("cycle", () -> SkillDataKey.createIntKey(0, false, MeditationSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> STAGE = DATA_KEYS.register("stage", () -> SkillDataKey.createIntKey(0, false, MeditationSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> PLUNGING = DATA_KEYS.register("plunging", () -> SkillDataKey.createBooleanKey(false, false, AgonyPlungeSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> STACK = DATA_KEYS.register("stack", () -> SkillDataKey.createIntKey(0, false, AgonyPlungeSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> ASCENDING = DATA_KEYS.register("ascending", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> WITHERCATHARSIS = DATA_KEYS.register("witherccatharsis", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> WITHERAFTEREFFECT = DATA_KEYS.register("witheraftereffect", () -> SkillDataKey.createIntKey(0, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> SUPERARMOR = DATA_KEYS.register("superarmor", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> ZOOM = DATA_KEYS.register("zoom", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class, EnderBlastSkill.class, EnderFusionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> ZOOM_COOLDOWN = DATA_KEYS.register("zoom_cooldown", () -> SkillDataKey.createIntKey(0, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> SHOOT = DATA_KEYS.register("shoot", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class, EnderBlastSkill.class, EnderFusionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> SHOOT_COOLDOWN = DATA_KEYS.register("shoot_cooldown", () -> SkillDataKey.createIntKey(0, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> DARKNESS_TARGET = DATA_KEYS.register("darkness_target", () -> SkillDataKey.createIntKey(0, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Vec3f>> DARKNESS_TARGET_VEC = DATA_KEYS.register("darkness_target_vec", () -> SkillDataKey.createVector3fKey(new Vec3f(0, 0, 0), false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> DARKNESS_TARGET_HITED = DATA_KEYS.register("darkness_target_hited", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> DARKNESS_TARGET_REAPED = DATA_KEYS.register("darkness_target_reaped", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> DARKNESS_ACTIVATE_PORTAL = DATA_KEYS.register("darkness_activate_portal", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Vec3f>> DARKNESS_PORTAL_VEC = DATA_KEYS.register("darkness_portal_vec", () -> SkillDataKey.createVector3fKey(new Vec3f(0, 0, 0), false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Float>> DARKNESS_PORTAL_ANGLE = DATA_KEYS.register("darkness_portal_angle", () -> SkillDataKey.createFloatKey(0.0F, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> DARKNESS_PORTAL_TIMER = DATA_KEYS.register("darkness_portal_timer", () -> SkillDataKey.createIntKey(0, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> BLACKHOLE = DATA_KEYS.register("blackhole", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Vec3f>> BLACKHOLE_VEC = DATA_KEYS.register("blackhole_vec", () -> SkillDataKey.createVector3fKey(new Vec3f(0, 0, 0), false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> BLACKHOLE_ACTIVE = DATA_KEYS.register("blackhole_active", () -> SkillDataKey.createBooleanKey(false, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> BLACKHOLE_TIMER = DATA_KEYS.register("blackhole_timer", () -> SkillDataKey.createIntKey(0, false, DemonicAscensionSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> COMBO = DATA_KEYS.register("combo", () -> SkillDataKey.createIntKey(0, false, EnderBlastSkill.class, EnderFusionSkill.class, RegierungSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> RELOAD_COOLDOWN = DATA_KEYS.register("reload_cooldown", () -> SkillDataKey.createIntKey(0, false, EnderBlastSkill.class, EnderFusionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> NOFALLDAMAGE = DATA_KEYS.register("nofalldamage", () -> SkillDataKey.createBooleanKey(false, false, EnderBlastSkill.class, EnderFusionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> SIDE = DATA_KEYS.register("side", () -> SkillDataKey.createBooleanKey(false, false, EnderFusionSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> ECHO = DATA_KEYS.register("echo", () -> SkillDataKey.createBooleanKey(false, false, LunarEclipseSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> CRESCENT = DATA_KEYS.register("crescent", () -> SkillDataKey.createBooleanKey(false, false, LunarEclipseSkill.class));
	public static final RegistryObject<SkillDataKey<Float>> LUNAR_ECLIPSE_STACK = DATA_KEYS.register("lunar_eclipse_stack", () -> SkillDataKey.createFloatKey(0.0F, false, LunarEclipseSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> GUARD_POINT = DATA_KEYS.register("guard_point", () -> SkillDataKey.createBooleanKey(false, false, RegierungSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> GUARD_POINT_RESULT = DATA_KEYS.register("guard_point_result", () -> SkillDataKey.createIntKey(0, false, RegierungSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> GESETZ_SPRENGKOPF = DATA_KEYS.register("gesetz_sprengkopf", () -> SkillDataKey.createBooleanKey(false, false, RegierungSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> SECOND_DRAW = DATA_KEYS.register("second_draw", () -> SkillDataKey.createBooleanKey(false, false, SakuraStateSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> TIMEDSLASH = DATA_KEYS.register("timedslash", () -> SkillDataKey.createBooleanKey(false, false, SakuraStateSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> FREQUENCY = DATA_KEYS.register("frequency", () -> SkillDataKey.createIntKey(0, false, SakuraStateSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> ATTACKS = DATA_KEYS.register("attacks", () -> SkillDataKey.createIntKey(0, false, SakuraStateSkill.class));
	public static final RegistryObject<SkillDataKey<Float>> DAMAGE = DATA_KEYS.register("damage", () -> SkillDataKey.createFloatKey(0.0F, false, SakuraStateSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> BUFFED = DATA_KEYS.register("buffed", () -> SkillDataKey.createBooleanKey(false, false, SoulSnatchSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> BUFFING = DATA_KEYS.register("buffing", () -> SkillDataKey.createBooleanKey(false, false, SoulSnatchSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> EXPIATION = DATA_KEYS.register("expiation", () -> SkillDataKey.createBooleanKey(false, false, SoulSnatchSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> REDEMPTION = DATA_KEYS.register("redemptioon", () -> SkillDataKey.createBooleanKey(false, false, SoulSnatchSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> STRENGHT = DATA_KEYS.register("strenght", () -> SkillDataKey.createIntKey(0, false, SoulSnatchSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> CATHARSIS = DATA_KEYS.register("catharsis", () -> SkillDataKey.createBooleanKey(false, false, DemonMarkPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> PARTICLE = DATA_KEYS.register("particle", () -> SkillDataKey.createBooleanKey(false, false, DemonMarkPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> LAPSE = DATA_KEYS.register("lapse", () -> SkillDataKey.createBooleanKey(false, false, DemonMarkPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> WITHERCURSE = DATA_KEYS.register("withercurse", () -> SkillDataKey.createBooleanKey(true, false, DemonMarkPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> BLINK = DATA_KEYS.register("blink", () -> SkillDataKey.createBooleanKey(false, false, DemonMarkPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> BASIC_ATTACK = DATA_KEYS.register("basic_attack", () -> SkillDataKey.createBooleanKey(false, false, DemonMarkPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> IDLE = DATA_KEYS.register("idle", () -> SkillDataKey.createBooleanKey(false, false, DemonMarkPassiveSkill.class, LunarEchoPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> VERSO = DATA_KEYS.register("verso", () -> SkillDataKey.createBooleanKey(false, false, LunarEchoPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> SHEATH = DATA_KEYS.register("sheath", () -> SkillDataKey.createBooleanKey(false, false, SatsujinPassive.class));
	public static final RegistryObject<SkillDataKey<Integer>> CHARGING_TIME = DATA_KEYS.register("charging_time", () -> SkillDataKey.createIntKey(0, false, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Integer>> SAVED_CHARGE = DATA_KEYS.register("saved_charge", () -> SkillDataKey.createIntKey(0, false, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> CHARGING = DATA_KEYS.register("charging", () -> SkillDataKey.createBooleanKey(false, false, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> CHARGED = DATA_KEYS.register("charged", () -> SkillDataKey.createBooleanKey(false, false, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> CHARGED_ATTACK = DATA_KEYS.register("charged_attack", () -> SkillDataKey.createBooleanKey(false, false, TormentPassiveSkill.class));
	public static final RegistryObject<SkillDataKey<Boolean>> MOVESPEED = DATA_KEYS.register("movespeed", () -> SkillDataKey.createBooleanKey(false, false, TormentPassiveSkill.class));
}